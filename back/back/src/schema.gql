# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Application {
  id: ID!
  message: String!
  resumePath: String!
  status: ApplicationStatus!
  mission: Mission!
  missionId: String!
  freelancer: FreelancerProfile!
  freelancerId: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum ApplicationStatus {
  PENDING
  PRE_SELECTED
  ACCEPTED
  REJECTED
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type FreelancerProfile {
  id: ID!
  user: User!
  skills: [String!]
  bio: String
  selectedMissions: [Mission!]!
  applications: [Application!]
}

type Dispute {
  id: ID!
  mission: Mission!
  openedBy: User!
  reason: String!
  status: DisputeStatus!
  openedAt: DateTime!
  resolution: String
}

"""The status of a dispute"""
enum DisputeStatus {
  OPEN
  IN_REVIEW
  RESOLVED
  REJECTED
}

type ClientProfile {
  id: ID!
  user: User!
  phoneNumber: String!
}

type Mission {
  id: Int!
  title: String!
  description: String!
  status: String!
  price: Int!
  date: Date!
  client: ClientProfile!
  requiredSkills: [String!]!
  deadline: Date!
  budget: String!
  createdAt: Date!
  clientName: String!
  progress: Int!
  tasks: TaskStats!
  preselectedFreelancers: FreelancerProfile
  selectedFreelancer: FreelancerProfile
  disputes: [Dispute!]!
  paymentIntentId: String
  paymentStatus: String
  applications: [Application!]
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

type TaskStats {
  total: Int!
  completed: Int!
}

type Review {
  id: ID!
  stars: Float!
  comment: String
  date: String!
  reviewer: User!
  reviewedUser: User!
  mission: Mission!
}

type User {
  id: ID!
  username: String!
  email: String!
  password: String!
  isAdmin: Boolean!
  imageUrl: String
  currentRole: String!
  reviews: [Review!]
}

"""Upload custom scalar type"""
scalar Upload

type Query {
  missions: [Mission!]!
  allMissions: [Mission!]!
  mission(id: Int!): Mission!
  applications: [Application!]!
  applicationsByMission(missionId: String!): [Application!]!
  myApplicationsByMission(missionId: String!): [Application!]!
  applicationsByFreelancer(freelancerId: String!): [Application!]!
  application(id: String!): Application!
}

type Mutation {
  createMission(createMissionInput: CreateMissionInput!): Mission!
  updateMission(updateMissionInput: UpdateMissionInput!): Mission!
  removeMission(id: Int!): Boolean!
  createApplication(createApplicationInput: CreateApplicationInput!): Application!
  updateApplication(id: String!, updateApplicationInput: UpdateApplicationInput!): Application!
  removeApplication(id: String!): Boolean!
  updateApplicationStatus(applicationId: ID!, newStatus: ApplicationStatus!): Application!
}

input CreateMissionInput {
  title: String!
  description: String!
  status: String! = "not_assigned"
  price: Int!
  date: String!
  requiredSkills: [String!]!
  deadline: DateTime!
  budget: String!
  progress: Int! = 0
  tasks: TaskStatsInput! = {total: 0, completed: 0}
}

input TaskStatsInput {
  total: Int!
  completed: Int!
}

input UpdateMissionInput {
  title: String
  description: String
  status: String = "not_assigned"
  price: Int
  date: String
  requiredSkills: [String!]
  deadline: DateTime
  budget: String
  progress: Int = 0
  tasks: TaskStatsInput = {total: 0, completed: 0}
  id: Int!
}

input CreateApplicationInput {
  message: String!
  missionId: String!
}

input UpdateApplicationInput {
  message: String
  status: ApplicationStatus
}